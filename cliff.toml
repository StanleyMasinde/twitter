# https://git-cliff.org/docs/configuration
[changelog]
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits %}
        - {% if commit.scope %}**{{ commit.scope }}**: {% endif %}\
            {% if commit.breaking %}**BREAKING**: {% endif %}\
            {{ commit.message | upper_first }}\
            {% if commit.remote.username %} by @{{ commit.remote.username }}{%- endif %}\
            {% if commit.remote.pr_number %} in [#{{ commit.remote.pr_number }}](<REPO>/pull/{{ commit.remote.pr_number }}){%- endif %}\
            ([{{ commit.id | truncate(length=7, end="") }}](<REPO>/commit/{{ commit.id }}))\
    {% endfor %}
{% endfor %}

**Full Changelog**: <REPO>/compare/{{ previous.version }}...{{ version }}
"""
trim = true
render_always = true
postprocessors = [
    { pattern = '<REPO>', replace = "https://github.com/StanleyMasinde/twitter" },
]

[git]
# Parse commits according to conventional commits specification
conventional_commits = true
# Filter out non-conventional commits
filter_unconventional = true
# Don't require all commits to be conventional (allows flexibility)
require_conventional = false
# Don't split commits on newlines
split_commits = false

# Preprocessors to enhance commit messages with GitHub integration
commit_preprocessors = [
    # Convert issue references to proper GitHub links
    { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](<REPO>/issues/${2}))" },
    # Convert PR references
    { pattern = 'Merge pull request #([0-9]+)', replace = "Merge PR [#${1}](<REPO>/pull/${1})" },
    # Fix common typos (uncomment if you have typos installed)
    # { pattern = '.*', replace_command = 'typos --write-changes -' },
]

# Protect breaking commits from being filtered
protect_breaking_commits = true

# Enhanced commit parsers with better GitHub workflow support
commit_parsers = [
    # Features
    { message = "^feat", group = "<!-- 0 -->🚀 Features" },
    # Bug fixes
    { message = "^fix", group = "<!-- 1 -->🐛 Bug Fixes" },
    # Refactoring
    { message = "^refactor", group = "<!-- 2 -->🚜 Refactor" },
    # Documentation
    { message = "^docs?", group = "<!-- 3 -->📚 Documentation" },
    # Performance improvements
    { message = "^perf", group = "<!-- 4 -->⚡ Performance" },
    # Styling
    { message = "^style", group = "<!-- 5 -->🎨 Styling" },
    # Testing
    { message = "^test", group = "<!-- 6 -->🧪 Testing" },
    # Build system
    { message = "^build", group = "<!-- 7 -->🔨 Build" },
    # CI/CD
    { message = "^ci", group = "<!-- 8 -->⚙️ CI/CD" },
    # Security fixes
    { body = ".*security", group = "<!-- 9 -->🛡️ Security" },
    # Reverts
    { message = "^revert", group = "<!-- 10 -->◀️ Revert" },

    # Skip common GitHub/automation commits
    { message = "^chore\\(release\\): prepare for", skip = true },
    { message = "^chore\\(deps.*\\)", skip = true },
    { message = "^chore\\(pr\\)", skip = true },
    { message = "^chore\\(pull\\)", skip = true },
    { message = "^Merge branch", skip = true },
    { message = "^Merge pull request", skip = true },
    { message = "^Update.*\\.md$", skip = true },
    { message = "^Bump.*version", skip = true },

    # General chores
    { message = "^chore", group = "<!-- 11 -->🧹 Chore" },
    # Catch-all for other commits
    { message = ".*", group = "<!-- 12 -->💼 Other" },
]

# Don't filter commits that don't match parsers
filter_commits = false

# Link parsers for GitHub integration
link_parsers = [
    # GitHub issues: #123 -> link to issue
    { pattern = "#(\\d+)", href = "https://github.com/StanleyMasinde/twitter/issues/$1" },
    # GitHub PRs: PR#123 -> link to pull request
    { pattern = "PR#(\\d+)", href = "https://github.com/StanleyMasinde/twitter/pull/$1" },
    # GitHub commits: commit abc123 -> link to commit
    { pattern = "commit ([a-f0-9]{7,40})", href = "https://github.com/StanleyMasinde/twitter/commit/$1" },
    # GitHub users: @username -> link to user profile
    { pattern = "@([a-zA-Z0-9_-]+)", href = "https://github.com/$1" },
]

# Use tags from current branch only
use_branch_tags = true
# Don't use topological ordering (chronological is clearer for releases)
topo_order = false
# Use topological ordering for commits (respects merge structure)
topo_order_commits = true
# Show newest commits first in each section
sort_commits = "newest"
# Don't process submodule commits
recurse_submodules = false

# GitHub-specific settings (uncomment and configure if needed)
# [remote.github]
owner = "StanleyMasinde"
repo = "twitter"
